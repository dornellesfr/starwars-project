{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Documentos/projects-turma23/sd-023-b-project-starwars-planets-search/src/context/Provider.jsx\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport MyContext from './MyContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Provider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [planets, setPlanets] = useState([]);\n  const [header, setHeader] = useState([]);\n  const [filter, setFilter] = useState({\n    byName: {\n      name: ''\n    },\n    byNumericValues: [{\n      column: 'population',\n      comparison: 'maior que',\n      value: 0\n    }]\n  });\n  const [filterNumerics, setFilterNumerics] = useState([]);\n  const [optionsNumeric, setOptionsNumeric] = useState(['population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water']);\n  useEffect(() => {\n    console.log(filterNumerics);\n  }, [filterNumerics]);\n  useEffect(() => {\n    const url = 'https://swapi.dev/api/planets';\n\n    async function fetchPlanets() {\n      try {\n        const request = await fetch(url);\n        const response = await request.json();\n        response.results.forEach(planet => delete planet.residents);\n        setPlanets(response.results);\n        setHeader(response.results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchPlanets();\n  }, []);\n\n  function handleData(planet) {\n    const bools = [];\n    filterNumerics.forEach(_ref2 => {\n      let {\n        column,\n        comparison,\n        value\n      } = _ref2;\n\n      if (comparison === 'maior que') {\n        bools.push(planet[column] > Number(value));\n      }\n\n      if (comparison === 'menor que') {\n        bools.push(planet[column] < Number(value));\n      }\n\n      if (comparison === 'igual a') {\n        bools.push(planet[column] === value);\n      }\n    });\n    return bools.every(el => el);\n  }\n\n  function searchPlanetByName(_ref3) {\n    let {\n      target\n    } = _ref3;\n    setFilter({ ...filter,\n      byName: {\n        name: target.value\n      }\n    });\n    setPlanets(header.filter(planet => planet.name.includes(target.value)));\n  }\n\n  function columnFilter(_ref4) {\n    let {\n      target\n    } = _ref4;\n    setFilter({ ...filter,\n      byNumericValues: [{ ...filter.byNumericValues[0],\n        column: target.value\n      }]\n    });\n  }\n\n  function comparisonFilter(_ref5) {\n    let {\n      target\n    } = _ref5;\n    setFilter({ ...filter,\n      byNumericValues: [{ ...filter.byNumericValues[0],\n        comparison: target.value\n      }]\n    });\n  }\n\n  function valueFilter(_ref6) {\n    let {\n      target\n    } = _ref6;\n    setFilter({ ...filter,\n      byNumericValues: [{ ...filter.byNumericValues[0],\n        value: target.value\n      }]\n    });\n  }\n\n  function filterButton() {\n    const {\n      byNumericValues\n    } = filter;\n    setFilterNumerics([...filterNumerics, byNumericValues[0]]);\n    optionsNumeric.map((option, index) => {\n      if (byNumericValues.column === option) {\n        optionsNumeric.splice(index, 1);\n      }\n    });\n    setFilter({ ...filter,\n      byNumericValues: [{\n        column: optionsNumeric[0],\n        comparison: 'maior que',\n        value: 0\n      }]\n    });\n  }\n\n  const contextValue = {\n    planets,\n    filter,\n    searchPlanetByName,\n    columnFilter,\n    comparisonFilter,\n    valueFilter,\n    filterButton,\n    header,\n    handleData,\n    optionsNumeric\n  };\n  return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n    value: { ...contextValue\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Provider, \"m9mPwRkezW3UVGj484v82DwDc/g=\");\n\n_c = Provider;\nProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default Provider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"names":["PropTypes","React","useEffect","useState","MyContext","Provider","children","planets","setPlanets","header","setHeader","filter","setFilter","byName","name","byNumericValues","column","comparison","value","filterNumerics","setFilterNumerics","optionsNumeric","setOptionsNumeric","console","log","url","fetchPlanets","request","fetch","response","json","results","forEach","planet","residents","error","handleData","bools","push","Number","every","el","searchPlanetByName","target","includes","columnFilter","comparisonFilter","valueFilter","filterButton","map","option","index","splice","contextValue","propTypes","node","isRequired"],"sources":["/home/fernando/Documentos/projects-turma23/sd-023-b-project-starwars-planets-search/src/context/Provider.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport MyContext from './MyContext';\n\nfunction Provider({ children }) {\n  const [planets, setPlanets] = useState([]);\n  const [header, setHeader] = useState([]);\n  const [filter, setFilter] = useState({\n    byName: { name: '' },\n    byNumericValues: [{ column: 'population', comparison: 'maior que', value: 0 }],\n  });\n  const [filterNumerics, setFilterNumerics] = useState([]);\n  const [optionsNumeric, setOptionsNumeric] = useState([\n    'population',\n    'orbital_period',\n    'diameter',\n    'rotation_period',\n    'surface_water',\n  ]);\n\n  useEffect(() => {\n    console.log(filterNumerics);\n  }, [filterNumerics]);\n\n  useEffect(() => {\n    const url = 'https://swapi.dev/api/planets';\n    async function fetchPlanets() {\n      try {\n        const request = await fetch(url);\n        const response = await request.json();\n\n        response.results.forEach((planet) => delete planet.residents);\n        setPlanets(response.results);\n        setHeader(response.results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchPlanets();\n  }, []);\n\n  function handleData(planet) {\n    const bools = [];\n\n    filterNumerics.forEach(({ column, comparison, value }) => {\n      if (comparison === 'maior que') {\n        bools.push((planet[column] > Number(value)));\n      }\n      if (comparison === 'menor que') {\n        bools.push(planet[column] < Number(value));\n      }\n      if (comparison === 'igual a') {\n        bools.push(planet[column] === value);\n      }\n    });\n    return bools.every((el) => el);\n  }\n\n  function searchPlanetByName({ target }) {\n    setFilter({ ...filter, byName: { name: target.value } });\n    setPlanets(header.filter((planet) => (\n      planet.name.includes(target.value)\n    )));\n  }\n\n  function columnFilter({ target }) {\n    setFilter({ ...filter,\n      byNumericValues: [{ ...filter.byNumericValues[0], column: target.value }] });\n  }\n\n  function comparisonFilter({ target }) {\n    setFilter({ ...filter,\n      byNumericValues: [{ ...filter.byNumericValues[0], comparison: target.value }] });\n  }\n\n  function valueFilter({ target }) {\n    setFilter({ ...filter,\n      byNumericValues: [{ ...filter.byNumericValues[0], value: target.value }] });\n  }\n\n  function filterButton() {\n    const { byNumericValues } = filter;\n    setFilterNumerics([...filterNumerics, byNumericValues[0]]);\n    optionsNumeric.map((option, index) => {\n      if (byNumericValues.column === option) {\n        optionsNumeric.splice(index, 1);\n      }\n    })\n    setFilter({ ...filter,\n      byNumericValues: [{ column: optionsNumeric[0], comparison: 'maior que', value: 0 }],\n    });\n  }\n\n  const contextValue = {\n    planets,\n    filter,\n    searchPlanetByName,\n    columnFilter,\n    comparisonFilter,\n    valueFilter,\n    filterButton,\n    header,\n    handleData,\n    optionsNumeric,\n  };\n\n  return (\n    <MyContext.Provider value={ { ...contextValue } }>\n      { children }\n    </MyContext.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Provider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}