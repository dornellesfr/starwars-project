{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Documentos/projects-turma23/sd-023-b-project-starwars-planets-search/src/context/Provider.jsx\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport MyContext from './MyContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Provider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [planets, setPlanets] = useState([]);\n  const [header, setHeader] = useState([]);\n  const [filter, setFilter] = useState({\n    byName: {\n      name: ''\n    },\n    byNumericValues: [{\n      column: 'population',\n      comparison: 'maior que',\n      value: 0\n    }]\n  });\n  const [filterNumerics, setFilterNumerics] = useState([]);\n  useEffect(() => {\n    const url = 'https://swapi.dev/api/planets';\n\n    async function fetchPlanets() {\n      try {\n        const request = await fetch(url);\n        const response = await request.json();\n        response.results.forEach(planet => delete planet.residents);\n        setPlanets(response.results);\n        setHeader(response.results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchPlanets();\n  }, []);\n\n  function searchPlanetByName(_ref2) {\n    let {\n      target\n    } = _ref2;\n    setFilter({ ...filter,\n      byName: {\n        name: target.value\n      }\n    });\n    setPlanets(header.filter(planet => planet.name.includes(target.value)));\n  }\n\n  function columnFilter(_ref3) {\n    let {\n      target\n    } = _ref3;\n    setFilter({ ...filter,\n      byNumericValues: [{ ...filter.byNumericValues[0],\n        column: target.value\n      }]\n    });\n  }\n\n  function comparisonFilter(_ref4) {\n    let {\n      target\n    } = _ref4;\n    setFilter({ ...filter,\n      byNumericValues: [{ ...filter.byNumericValues[0],\n        comparison: target.value\n      }]\n    });\n  }\n\n  function valueFilter(_ref5) {\n    let {\n      target\n    } = _ref5;\n    setFilter({ ...filter,\n      byNumericValues: [{ ...filter.byNumericValues[0],\n        value: target.value\n      }]\n    });\n  }\n\n  function filterButton() {\n    const [{\n      column,\n      comparison,\n      value\n    }] = filter.byNumericValues;\n    setFilterNumerics([...filterNumerics, filter.byNumericValues[0]]);\n    setPlanets(planets.filter(planet => {\n      if (comparison === 'maior que') {\n        return planet[column] > Number(value);\n      }\n\n      if (comparison === 'menor que') return planet[column] < Number(value);\n      return planet[column] === value;\n    }));\n  }\n\n  const contextValue = {\n    planets,\n    filter,\n    searchPlanetByName,\n    columnFilter,\n    comparisonFilter,\n    valueFilter,\n    filterButton,\n    header\n  };\n  return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n    value: { ...contextValue\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Provider, \"vztjDRxsRC8EcM+tdRYBON1u9Zo=\");\n\n_c = Provider;\nProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default Provider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"names":["PropTypes","React","useEffect","useState","MyContext","Provider","children","planets","setPlanets","header","setHeader","filter","setFilter","byName","name","byNumericValues","column","comparison","value","filterNumerics","setFilterNumerics","url","fetchPlanets","request","fetch","response","json","results","forEach","planet","residents","error","console","log","searchPlanetByName","target","includes","columnFilter","comparisonFilter","valueFilter","filterButton","Number","contextValue","propTypes","node","isRequired"],"sources":["/home/fernando/Documentos/projects-turma23/sd-023-b-project-starwars-planets-search/src/context/Provider.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport MyContext from './MyContext';\n\nfunction Provider({ children }) {\n  const [planets, setPlanets] = useState([]);\n  const [header, setHeader] = useState([]);\n  const [filter, setFilter] = useState({\n    byName: { name: '' },\n    byNumericValues: [{ column: 'population', comparison: 'maior que', value: 0 }],\n  });\n  const [filterNumerics, setFilterNumerics] = useState([]);\n\n  useEffect(() => {\n    const url = 'https://swapi.dev/api/planets';\n    async function fetchPlanets() {\n      try {\n        const request = await fetch(url);\n        const response = await request.json();\n\n        response.results.forEach((planet) => delete planet.residents);\n        setPlanets(response.results);\n        setHeader(response.results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchPlanets();\n  }, []);\n\n  function searchPlanetByName({ target }) {\n    setFilter({ ...filter, byName: { name: target.value } });\n    setPlanets(header.filter((planet) => (\n      planet.name.includes(target.value)\n    )));\n  }\n\n  function columnFilter({ target }) {\n    setFilter({ ...filter,\n      byNumericValues: [{ ...filter.byNumericValues[0], column: target.value }] });\n  }\n\n  function comparisonFilter({ target }) {\n    setFilter({ ...filter,\n      byNumericValues: [{ ...filter.byNumericValues[0], comparison: target.value }] });\n  }\n\n  function valueFilter({ target }) {\n    setFilter({ ...filter,\n      byNumericValues: [{ ...filter.byNumericValues[0], value: target.value }] });\n  }\n\n  function filterButton() {\n    const [{ column, comparison, value }] = filter.byNumericValues;\n\n    setFilterNumerics([...filterNumerics, filter.byNumericValues[0]]);\n    setPlanets(planets.filter((planet) => {\n\n      if (comparison === 'maior que') {\n        return (planet[column] > Number(value));\n      }\n      if (comparison === 'menor que') return planet[column] < Number(value);\n      return planet[column] === value;\n    }));\n  }\n\n  const contextValue = {\n    planets,\n    filter,\n    searchPlanetByName,\n    columnFilter,\n    comparisonFilter,\n    valueFilter,\n    filterButton,\n    header,\n  };\n\n  return (\n    <MyContext.Provider value={ { ...contextValue } }>\n      { children }\n    </MyContext.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Provider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}