{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Documentos/projects-turma23/sd-023-b-project-starwars-planets-search/src/components/Table.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport MyContext from '../context/MyContext';\nimport Loading from './Loading';\nimport title from '../services/title';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Table() {\n  _s();\n\n  const {\n    planets,\n    searchNamePlanet,\n    searchPlanetByName,\n    filterNamePlanets\n  } = useContext(MyContext);\n  const {\n    results\n  } = planets;\n  if (filterNamePlanets && results) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 44\n  }, this);\n  const headers = Object.keys(results[0]);\n  const formatedHeaders = headers.map(header => title(header.replace('_', ' ')));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"name-filter\",\n      children: [\"Filter by name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name-filter\",\n        placeholder: \"find a planet by name\",\n        onChange: searchPlanetByName,\n        value: searchNamePlanet,\n        \"data-testid\": \"name-filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: formatedHeaders.map((header, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: header\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filterNamePlanets.map(planet => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: planet.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: planet.rotation_period\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: planet.orbital_period\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: planet.diameter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: planet.climate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: planet.gravity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: planet.terrain\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: planet.surface_water\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: planet.population\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: planet.films\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: planet.created\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: planet.edited\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: planet.url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, planet.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Table, \"YViF9OMxXMls2mAd0NOfhBo0meE=\");\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useContext","MyContext","Loading","title","Table","planets","searchNamePlanet","searchPlanetByName","filterNamePlanets","results","headers","Object","keys","formatedHeaders","map","header","replace","index","planet","name","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","created","edited","url"],"sources":["/home/fernando/Documentos/projects-turma23/sd-023-b-project-starwars-planets-search/src/components/Table.jsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport MyContext from '../context/MyContext';\nimport Loading from './Loading';\nimport title from '../services/title';\n\nfunction Table() {\n  const { planets,\n    searchNamePlanet,\n    searchPlanetByName,\n    filterNamePlanets,\n  } = useContext(MyContext);\n  const { results } = planets;\n\n  if (filterNamePlanets && results) return <Loading />;\n  const headers = Object.keys(results[0]);\n  const formatedHeaders = headers.map((header) => (\n    title(header.replace('_', ' '))\n  ));\n\n  return (\n    <div>\n      <label htmlFor=\"name-filter\">\n        Filter by name:\n        <input\n          type=\"text\"\n          id=\"name-filter\"\n          placeholder=\"find a planet by name\"\n          onChange={ searchPlanetByName }\n          value={ searchNamePlanet }\n          data-testid=\"name-filter\"\n        />\n      </label>\n      <table>\n        <thead>\n          <tr>\n            { formatedHeaders.map((header, index) => (\n              <th key={ index }>{ header }</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          { filterNamePlanets.map((planet) => (\n            <tr key={ planet.name }>\n              <th>{ planet.name }</th>\n              <th>{ planet.rotation_period }</th>\n              <th>{ planet.orbital_period }</th>\n              <th>{ planet.diameter }</th>\n              <th>{ planet.climate }</th>\n              <th>{ planet.gravity }</th>\n              <th>{ planet.terrain }</th>\n              <th>{ planet.surface_water }</th>\n              <th>{ planet.population }</th>\n              <th>{ planet.films }</th>\n              <th>{ planet.created }</th>\n              <th>{ planet.edited }</th>\n              <th>{ planet.url }</th>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Table;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;;;AAEA,SAASC,KAAT,GAAiB;EAAA;;EACf,MAAM;IAAEC,OAAF;IACJC,gBADI;IAEJC,kBAFI;IAGJC;EAHI,IAIFR,UAAU,CAACC,SAAD,CAJd;EAKA,MAAM;IAAEQ;EAAF,IAAcJ,OAApB;EAEA,IAAIG,iBAAiB,IAAIC,OAAzB,EAAkC,oBAAO,QAAC,OAAD;IAAA;IAAA;IAAA;EAAA,QAAP;EAClC,MAAMC,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYH,OAAO,CAAC,CAAD,CAAnB,CAAhB;EACA,MAAMI,eAAe,GAAGH,OAAO,CAACI,GAAR,CAAaC,MAAD,IAClCZ,KAAK,CAACY,MAAM,CAACC,OAAP,CAAe,GAAf,EAAoB,GAApB,CAAD,CADiB,CAAxB;EAIA,oBACE;IAAA,wBACE;MAAO,OAAO,EAAC,aAAf;MAAA,2CAEE;QACE,IAAI,EAAC,MADP;QAEE,EAAE,EAAC,aAFL;QAGE,WAAW,EAAC,uBAHd;QAIE,QAAQ,EAAGT,kBAJb;QAKE,KAAK,EAAGD,gBALV;QAME,eAAY;MANd;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAYE;MAAA,wBACE;QAAA,uBACE;UAAA,UACIO,eAAe,CAACC,GAAhB,CAAoB,CAACC,MAAD,EAASE,KAAT,kBACpB;YAAA,UAAoBF;UAApB,GAAUE,KAAV;YAAA;YAAA;YAAA;UAAA,QADA;QADJ;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAQE;QAAA,UACIT,iBAAiB,CAACM,GAAlB,CAAuBI,MAAD,iBACtB;UAAA,wBACE;YAAA,UAAMA,MAAM,CAACC;UAAb;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAA,UAAMD,MAAM,CAACE;UAAb;YAAA;YAAA;YAAA;UAAA,QAFF,eAGE;YAAA,UAAMF,MAAM,CAACG;UAAb;YAAA;YAAA;YAAA;UAAA,QAHF,eAIE;YAAA,UAAMH,MAAM,CAACI;UAAb;YAAA;YAAA;YAAA;UAAA,QAJF,eAKE;YAAA,UAAMJ,MAAM,CAACK;UAAb;YAAA;YAAA;YAAA;UAAA,QALF,eAME;YAAA,UAAML,MAAM,CAACM;UAAb;YAAA;YAAA;YAAA;UAAA,QANF,eAOE;YAAA,UAAMN,MAAM,CAACO;UAAb;YAAA;YAAA;YAAA;UAAA,QAPF,eAQE;YAAA,UAAMP,MAAM,CAACQ;UAAb;YAAA;YAAA;YAAA;UAAA,QARF,eASE;YAAA,UAAMR,MAAM,CAACS;UAAb;YAAA;YAAA;YAAA;UAAA,QATF,eAUE;YAAA,UAAMT,MAAM,CAACU;UAAb;YAAA;YAAA;YAAA;UAAA,QAVF,eAWE;YAAA,UAAMV,MAAM,CAACW;UAAb;YAAA;YAAA;YAAA;UAAA,QAXF,eAYE;YAAA,UAAMX,MAAM,CAACY;UAAb;YAAA;YAAA;YAAA;UAAA,QAZF,eAaE;YAAA,UAAMZ,MAAM,CAACa;UAAb;YAAA;YAAA;YAAA;UAAA,QAbF;QAAA,GAAUb,MAAM,CAACC,IAAjB;UAAA;UAAA;UAAA;QAAA,QADA;MADJ;QAAA;QAAA;QAAA;MAAA,QARF;IAAA;MAAA;MAAA;MAAA;IAAA,QAZF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA2CD;;GAzDQf,K;;KAAAA,K;AA2DT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}