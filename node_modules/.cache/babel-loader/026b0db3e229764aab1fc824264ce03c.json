{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Documentos/projects-turma23/sd-023-b-project-starwars-planets-search/src/context/Provider.jsx\",\n    _s = $RefreshSig$();\n\n// import PropTypes, { object } from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport MyContext from './MyContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Provider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [planets, setPlanets] = useState([]);\n  useEffect(() => {\n    const url = 'https://swapi.dev/api/planets';\n\n    async function fetchPlanets() {\n      const request = await fetch(url);\n      const response = await request.json();\n      await res;\n      setPlanets(await response);\n    }\n\n    fetchPlanets();\n  }, []);\n  const contextValue = {\n    planets\n  };\n  console.log(planets);\n  return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n    value: { ...contextValue\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n} // Provider.propTypes = {\n//   children: PropTypes.arrayOf(String).isRequired,\n// };\n\n\n_s(Provider, \"von7Z1r3F3hAxnvSjQX44zZhN8s=\");\n\n_c = Provider;\nexport default Provider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"names":["React","useEffect","useState","MyContext","Provider","children","planets","setPlanets","url","fetchPlanets","request","fetch","response","json","res","contextValue","console","log"],"sources":["/home/fernando/Documentos/projects-turma23/sd-023-b-project-starwars-planets-search/src/context/Provider.jsx"],"sourcesContent":["// import PropTypes, { object } from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport MyContext from './MyContext';\n\nfunction Provider({ children }) {\n  const [planets, setPlanets] = useState([]);\n\n  useEffect(() => {\n    const url = 'https://swapi.dev/api/planets';\n    async function fetchPlanets() {\n      const request = await fetch(url);\n      const response = await request.json();\n\n      await res\n      setPlanets(await response);\n    }\n\n    fetchPlanets();\n  }, []);\n\n  const contextValue = {\n    planets,\n  };\n\n  console.log(planets);\n  return (\n    <MyContext.Provider value={ { ...contextValue } }>\n      { children }\n    </MyContext.Provider>\n  );\n}\n\n// Provider.propTypes = {\n//   children: PropTypes.arrayOf(String).isRequired,\n// };\n\nexport default Provider;\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,SAASC,QAAT,OAAgC;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EAC9B,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMO,GAAG,GAAG,+BAAZ;;IACA,eAAeC,YAAf,GAA8B;MAC5B,MAAMC,OAAO,GAAG,MAAMC,KAAK,CAACH,GAAD,CAA3B;MACA,MAAMI,QAAQ,GAAG,MAAMF,OAAO,CAACG,IAAR,EAAvB;MAEA,MAAMC,GAAN;MACAP,UAAU,CAAC,MAAMK,QAAP,CAAV;IACD;;IAEDH,YAAY;EACb,CAXQ,EAWN,EAXM,CAAT;EAaA,MAAMM,YAAY,GAAG;IACnBT;EADmB,CAArB;EAIAU,OAAO,CAACC,GAAR,CAAYX,OAAZ;EACA,oBACE,QAAC,SAAD,CAAW,QAAX;IAAoB,KAAK,EAAG,EAAE,GAAGS;IAAL,CAA5B;IAAA,UACIV;EADJ;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,C,CAED;AACA;AACA;;;GA9BSD,Q;;KAAAA,Q;AAgCT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}