{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Documentos/projects-turma23/sd-023-b-project-starwars-planets-search/src/context/Provider.jsx\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport MyContext from './MyContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Provider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [planets, setPlanets] = useState([]);\n  const [inputNamePlanet, setInputNamePlanet] = useState('');\n  useEffect(() => {\n    const url = 'https://swapi.dev/api/planets';\n\n    async function fetchPlanets() {\n      try {\n        const request = await fetch(url);\n        const response = await request.json();\n        response.results.map(planet => delete planet.residents);\n        setPlanets(response);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchPlanets();\n  }, []);\n\n  function searchPlanetByName(_ref2) {\n    let {\n      target\n    } = _ref2;\n    setInputNamePlanet(target.value);\n  }\n\n  function filterNamePlanets() {\n    if (!planets) return null;\n    const sensitiveCase = /inputNamePlanet/i;\n    return planets.results.filter(planet => planet.name.includes(sensitiveCase));\n  }\n\n  const contextValue = {\n    planets,\n    inputNamePlanet,\n    searchPlanetByName,\n    filterNamePlanets\n  };\n  return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n    value: { ...contextValue\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Provider, \"XJR8V1HJFeDLClFy+aOD4FDhyIk=\");\n\n_c = Provider;\nProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default Provider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"names":["PropTypes","React","useEffect","useState","MyContext","Provider","children","planets","setPlanets","inputNamePlanet","setInputNamePlanet","url","fetchPlanets","request","fetch","response","json","results","map","planet","residents","error","console","log","searchPlanetByName","target","value","filterNamePlanets","sensitiveCase","filter","name","includes","contextValue","propTypes","node","isRequired"],"sources":["/home/fernando/Documentos/projects-turma23/sd-023-b-project-starwars-planets-search/src/context/Provider.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport MyContext from './MyContext';\n\nfunction Provider({ children }) {\n  const [planets, setPlanets] = useState([]);\n  const [inputNamePlanet, setInputNamePlanet] = useState('');\n\n  useEffect(() => {\n    const url = 'https://swapi.dev/api/planets';\n    async function fetchPlanets() {\n      try {\n        const request = await fetch(url);\n        const response = await request.json();\n\n        response.results.map((planet) => delete planet.residents);\n        setPlanets(response);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchPlanets();\n  }, []);\n\n  function searchPlanetByName({ target }) {\n    setInputNamePlanet(target.value);\n  }\n\n  function filterNamePlanets() {\n    if (!planets) return null;\n    const sensitiveCase = /inputNamePlanet/i;\n    return planets.results.filter((planet) => planet.name.includes(sensitiveCase));\n  }\n\n  const contextValue = {\n    planets,\n    inputNamePlanet,\n    searchPlanetByName,\n    filterNamePlanets,\n  };\n\n  return (\n    <MyContext.Provider value={ { ...contextValue } }>\n      { children }\n    </MyContext.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Provider;\n"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,SAASC,QAAT,OAAgC;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EAC9B,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACM,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,EAAD,CAAtD;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMS,GAAG,GAAG,+BAAZ;;IACA,eAAeC,YAAf,GAA8B;MAC5B,IAAI;QACF,MAAMC,OAAO,GAAG,MAAMC,KAAK,CAACH,GAAD,CAA3B;QACA,MAAMI,QAAQ,GAAG,MAAMF,OAAO,CAACG,IAAR,EAAvB;QAEAD,QAAQ,CAACE,OAAT,CAAiBC,GAAjB,CAAsBC,MAAD,IAAY,OAAOA,MAAM,CAACC,SAA/C;QACAZ,UAAU,CAACO,QAAD,CAAV;MACD,CAND,CAME,OAAOM,KAAP,EAAc;QACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACD;IACF;;IAEDT,YAAY;EACb,CAfQ,EAeN,EAfM,CAAT;;EAiBA,SAASY,kBAAT,QAAwC;IAAA,IAAZ;MAAEC;IAAF,CAAY;IACtCf,kBAAkB,CAACe,MAAM,CAACC,KAAR,CAAlB;EACD;;EAED,SAASC,iBAAT,GAA6B;IAC3B,IAAI,CAACpB,OAAL,EAAc,OAAO,IAAP;IACd,MAAMqB,aAAa,GAAG,kBAAtB;IACA,OAAOrB,OAAO,CAACU,OAAR,CAAgBY,MAAhB,CAAwBV,MAAD,IAAYA,MAAM,CAACW,IAAP,CAAYC,QAAZ,CAAqBH,aAArB,CAAnC,CAAP;EACD;;EAED,MAAMI,YAAY,GAAG;IACnBzB,OADmB;IAEnBE,eAFmB;IAGnBe,kBAHmB;IAInBG;EAJmB,CAArB;EAOA,oBACE,QAAC,SAAD,CAAW,QAAX;IAAoB,KAAK,EAAG,EAAE,GAAGK;IAAL,CAA5B;IAAA,UACI1B;EADJ;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GA3CQD,Q;;KAAAA,Q;AA6CTA,QAAQ,CAAC4B,SAAT,GAAqB;EACnB3B,QAAQ,EAAEN,SAAS,CAACkC,IAAV,CAAeC;AADN,CAArB;AAIA,eAAe9B,QAAf"},"metadata":{},"sourceType":"module"}