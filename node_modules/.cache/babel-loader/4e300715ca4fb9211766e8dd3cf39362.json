{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Documentos/projects-turma23/sd-023-b-project-starwars-planets-search/src/context/Provider.jsx\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport MyContext from './MyContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Provider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [planets, setPlanets] = useState([]);\n  const [filter, setFilter] = useState({\n    byName: {\n      name: ''\n    },\n    byNumericValues: [{\n      column: 'population',\n      comparison: 'maior que',\n      value: 0\n    }]\n  });\n  const [header, setHeader] = useState([]);\n  useEffect(() => {\n    const url = 'https://swapi.dev/api/planets';\n\n    async function fetchPlanets() {\n      const request = await fetch(url);\n      const response = await request.json();\n      const result = response.results.map(planet => delete planet.residents);\n      setPlanets(result);\n      setHeader(resp);\n    }\n\n    fetchPlanets();\n  }, []);\n\n  function searchPlanetByName(_ref2) {\n    let {\n      target\n    } = _ref2;\n    setFilter({ ...filter,\n      byName: {\n        name: target.value\n      }\n    });\n    setPlanets(planets.filter(planet => planet.name.includes(filter.byName.name)));\n  } // function filterNamePlanets() {\n  //   if (!planets) return null;\n  // }\n\n\n  function columnFilter(_ref3) {\n    let {\n      target\n    } = _ref3;\n    setFilter({ ...filter,\n      byNumericValues: [{ ...filter.byNumericValues[0],\n        column: target.value\n      }]\n    });\n  }\n\n  function comparisonFilter(_ref4) {\n    let {\n      target\n    } = _ref4;\n    setFilter({ ...filter,\n      byNumericValues: [{ ...filter.byNumericValues[0],\n        comparison: target.value\n      }]\n    });\n  }\n\n  function valueFilter(_ref5) {\n    let {\n      target\n    } = _ref5;\n    setFilter({ ...filter,\n      byNumericValues: [{ ...filter.byNumericValues[0],\n        value: target.value\n      }]\n    });\n  }\n\n  function filterButton() {\n    const [{\n      column,\n      comparison,\n      value\n    }] = filter.byNumericValues;\n    setPlanets(planets.filter(planet => {\n      if (comparison === 'maior que') {\n        return planet[column] > Number(value);\n      }\n\n      if (comparison === 'menor que') return planet[column];\n      return planet[column] === value;\n    }));\n  }\n\n  const contextValue = {\n    planets,\n    filter,\n    searchPlanetByName,\n    columnFilter,\n    comparisonFilter,\n    valueFilter,\n    filterButton,\n    header\n  };\n  return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n    value: { ...contextValue\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Provider, \"tZ+iJSYKEckz1NlIS0Cc6yq+vx8=\");\n\n_c = Provider;\nProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default Provider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"names":["PropTypes","React","useEffect","useState","MyContext","Provider","children","planets","setPlanets","filter","setFilter","byName","name","byNumericValues","column","comparison","value","header","setHeader","url","fetchPlanets","request","fetch","response","json","result","results","map","planet","residents","resp","searchPlanetByName","target","includes","columnFilter","comparisonFilter","valueFilter","filterButton","Number","contextValue","propTypes","node","isRequired"],"sources":["/home/fernando/Documentos/projects-turma23/sd-023-b-project-starwars-planets-search/src/context/Provider.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport MyContext from './MyContext';\n\nfunction Provider({ children }) {\n  const [planets, setPlanets] = useState([]);\n  const [filter, setFilter] = useState({\n    byName: { name: '' },\n    byNumericValues: [{ column: 'population', comparison: 'maior que', value: 0 }],\n  });\n  const [header, setHeader] = useState([]);\n\n  useEffect(() => {\n    const url = 'https://swapi.dev/api/planets';\n    async function fetchPlanets() {\n      const request = await fetch(url);\n      const response = await request.json();\n\n      const result = response.results.map((planet) => delete planet.residents);\n      setPlanets(result);\n      setHeader(resp);\n    }\n    fetchPlanets();\n  }, []);\n\n  function searchPlanetByName({ target }) {\n    setFilter({ ...filter, byName: { name: target.value } });\n    setPlanets(planets.filter((planet) => (\n      planet.name.includes(filter.byName.name)\n    )));\n  }\n\n  // function filterNamePlanets() {\n  //   if (!planets) return null;\n\n  // }\n\n  function columnFilter({ target }) {\n    setFilter({ ...filter,\n      byNumericValues: [{ ...filter.byNumericValues[0], column: target.value }] });\n  }\n\n  function comparisonFilter({ target }) {\n    setFilter({ ...filter,\n      byNumericValues: [{ ...filter.byNumericValues[0], comparison: target.value }] });\n  }\n\n  function valueFilter({ target }) {\n    setFilter({ ...filter,\n      byNumericValues: [{ ...filter.byNumericValues[0], value: target.value }] });\n  }\n\n  function filterButton() {\n    const [{ column, comparison, value }] = filter.byNumericValues;\n    setPlanets(planets.filter((planet) => {\n      if (comparison === 'maior que') {\n        return planet[column] > Number(value);\n      }\n      if (comparison === 'menor que') return planet[column];\n      return planet[column] === value;\n    }));\n  }\n\n  const contextValue = {\n    planets,\n    filter,\n    searchPlanetByName,\n    columnFilter,\n    comparisonFilter,\n    valueFilter,\n    filterButton,\n    header,\n  };\n\n  return (\n    <MyContext.Provider value={ { ...contextValue } }>\n      { children }\n    </MyContext.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Provider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}